require('./config');

//El nostre servidor web serà epress
const express = require('express')
const app = express()
const { MongoClient } = require("mongodb");
//Utilitats
const bodyParser = require('body-parser')
const path = require('path');
// parse application/x-www-form-urlencoded
app.use(bodyParser.urlencoded({ extended: false }))

// parse application/json
app.use(bodyParser.json())

let renderHTML = path.resolve(__dirname, '../public/index.html');

app.get('/', function (req, res) {
  res.sendFile(renderHTML);
})
 
 

/* Connectem amb el server de mongodb */
const client = new MongoClient(process.env.URLDB);

// Per fer proves
async function run() {
  try {
    console.log('Prova per veure que connecta a la BD exercici4 i que consulta en la colecció usuaris un usuari')
    await client.connect();
    const database = client.db('exercici4');
    const collection = database.collection('usuaris');
    // Query for a movie that has the title 'Back to the Future'
    const query = { email:'pedcremo@gmail.com' };
    const user = await collection.findOne(query);
    console.log(user);
    return collection;
  } finally {
    // Ensures that the client will close when you finish/error
    await client.close();
  }
}

//Connect to user collection
//let userCollection = run().catch(console.dir);

app.listen(process.env.PORT, ()=> {
    console.log("Escoltant en port "+process.env.PORT);
})

//Endpoint Login
app.post('/login', async function (req, res) {

  let body = req.body;
  await client.connect();
  const database = client.db('exercici4');
  const collection = database.collection('usuaris');
  //const query = { email: body.email  }; //Descomentar i comentar la linia de baix si volem evitar injecció NOSQL en paràmetre password
  const query = { email: body.email ,password:body.password };
  
  await collection.findOne(query ,(erro,usuariDB) => {
    if (erro) {
      return res.status(500).json({
          ok: false,
          err: erro
      })
    }
    // Verifica que existeixca un usuari amb el email escrit.
    if (!usuariDB) {
      console.log("ERROR: usuari incorrecte")
      return res.status(400).json({
          ok: false,
          err: {
              message: "Usuari o pass erronis"
          }
      })
    }
     //Descomentar aquest bloc si volem evitar injecció NOSQL en paràmetre password
    // Valida que la pass escrita per l'usuari, siga la emmagatzemada en la db
    /* if (body.password != usuariDB.password){
      console.log("ERROR: password incorrecte")
      return res.status(400).json({
          ok: false,
          err: {
              message: "Usuari o pass erronis"
          }
      });
    }*/
    console.log("OK: Usuari i password correctes")
    return res.status(200).json({
      ok: true,
      usuari: usuariDB,
    });
  });
});   